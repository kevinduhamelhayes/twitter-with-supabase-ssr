NEXT_PUBLIC_SUPABASE_URL="https://guwmmucswvanizkhsdbj.supabase.co"
NEXT_PUBLIC_SUPABASE_URL="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd1d21tdWNzd3Zhbml6a2hzZGJqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA1MDA2NzgsImV4cCI6MjA1NjA3NjY3OH0.CfjDi5uj6HsQRq5EVO34UbpQqH-zQg48ahbluK-mipk"

Gke9T5Yy_bbDmzC
midutwitter

-- Crear la tabla de perfiles
create table profiles (
  id uuid references auth.users on delete cascade primary key,
  username text unique,
  full_name text,
  avatar_url text,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Crear la tabla de posts
create table posts (
  id uuid default gen_random_uuid() primary key,
  user_id uuid references profiles(id) on delete cascade not null,
  content text not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Habilitar RLS (Row Level Security)
alter table profiles enable row level security;
alter table posts enable row level security;

-- Crear políticas para profiles
create policy "Los perfiles pueden ser leídos por todos" on profiles
  for select using (true);

create policy "Los usuarios pueden editar su propio perfil" on profiles
  for update using (auth.uid() = id);

-- Crear políticas para posts
create policy "Los posts pueden ser leídos por todos" on posts
  for select using (true);

create policy "Los usuarios autenticados pueden crear posts" on posts
  for insert with check (auth.uid() = user_id);

create policy "Los usuarios pueden eliminar sus propios posts" on posts
  for delete using (auth.uid() = user_id);

-- Crear función para manejar nuevos usuarios
create function public.handle_new_user()
returns trigger as $$
begin
  insert into public.profiles (id, username, full_name, avatar_url)
  values (
    new.id,
    new.raw_user_meta_data->>'user_name',
    new.raw_user_meta_data->>'full_name',
    new.raw_user_meta_data->>'avatar_url'
  );
  return new;
end;
$$ language plpgsql security definer;

-- Crear trigger para nuevos usuarios
create trigger on_auth_user_created
  after insert on auth.users
  for each row execute procedure public.handle_new_user();